{"ast":null,"code":"import { GlobalConstants } from 'src/app/service/global.variables';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Validators } from \"@angular/forms\";\nimport { ImageModalComponent } from './image-modal/image-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/images/images.service\";\nimport * as i3 from \"../../service/crud/crud.service\";\nimport * as i4 from \"../../service/user/user.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../nav/navbar.component\";\nimport * as i9 from \"@angular/material/grid-list\";\nimport * as i10 from \"../../nav/footer/footer.component\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"safe-pipe\";\n\nfunction AlbumViewComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"mat-card\", 10);\n    i0.ɵɵelementStart(3, \"mat-card-header\");\n    i0.ɵɵelement(4, \"div\", 11);\n    i0.ɵɵelementStart(5, \"mat-card-title\");\n    i0.ɵɵtext(6, \"Shiba Inu\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-card-subtitle\");\n    i0.ɵɵtext(8, \"Dog Breed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"img\", 12);\n    i0.ɵɵelementStart(10, \"mat-card-content\");\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12, \" The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally bred for hunting. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-card-actions\");\n    i0.ɵɵelementStart(14, \"button\", 13);\n    i0.ɵɵtext(15, \"LIKE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 13);\n    i0.ɵɵtext(17, \"SHARE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_mat_grid_tile_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_mat_grid_tile_12_div_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const a_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.removeFavorite(a_r4._id);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"favorite\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_mat_grid_tile_12_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_mat_grid_tile_12_ng_template_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const a_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.makeFavorite(a_r4._id);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"favorite_border\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_mat_grid_tile_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 14);\n    i0.ɵɵelementStart(1, \"mat-card\", 10);\n    i0.ɵɵelementStart(2, \"mat-card-header\");\n    i0.ɵɵelementStart(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtemplate(6, AlbumViewComponent_mat_grid_tile_12_div_6_Template, 4, 0, \"div\", 16);\n    i0.ɵɵtemplate(7, AlbumViewComponent_mat_grid_tile_12_ng_template_7_Template, 4, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"img\", 18);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_mat_grid_tile_12_Template_img_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const a_r4 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.openModal(a_r4.filename);\n    });\n    i0.ɵɵpipe(10, \"safe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-card-content\");\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\");\n    i0.ɵɵelementStart(15, \"strong\");\n    i0.ɵɵtext(16, \"Tags:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-card-actions\");\n    i0.ɵɵelementStart(19, \"button\", 13);\n    i0.ɵɵtext(20, \"LIKE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 13);\n    i0.ɵɵtext(22, \"SHARE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"mat-card-footer\");\n    i0.ɵɵelementStart(24, \"p\");\n    i0.ɵɵtext(25, \"footer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"> \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const a_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n\n    const _r7 = i0.ɵɵreference(8);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(a_r4.metadata.caption);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Favorites[i_r5] == null ? null : ctx_r1.Favorites[i_r5].favorite)(\"ngIfElse\", _r7);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"alt\", a_r4.metadata.caption);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind2(10, 8, ctx_r1.serverURI + \"/images/file/\" + a_r4.filename, \"url\"), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", a_r4.metadata.city, \", \", a_r4.metadata.state, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(a_r4.tags);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"background-image\": a0\n  };\n};\n\nexport let AlbumViewComponent = /*#__PURE__*/(() => {\n  class AlbumViewComponent {\n    constructor(actRoute, imageService, crudService, userService, dialog, fb) {\n      this.actRoute = actRoute;\n      this.imageService = imageService;\n      this.crudService = crudService;\n      this.userService = userService;\n      this.dialog = dialog;\n      this.fb = fb;\n      this.user_id = [];\n      this.albumImage = [];\n      this.imageData = [];\n      this.Post = [];\n      this.submitted = false;\n      this.Favorites = [];\n      this.Comments = [];\n      this.destroy$ = new Subject();\n      this.user_id = localStorage.getItem('uid');\n      this.baseURI = GlobalConstants.baseURI;\n      this.serverURI = GlobalConstants.serverURI;\n      this.id = this.actRoute.snapshot.paramMap.get('id');\n      this.commentForm = this.fb.group({\n        comment: ['', [Validators.required]],\n        user: []\n      });\n    }\n\n    get f() {\n      return this.commentForm.controls;\n    }\n\n    ngOnInit() {\n      this.getMerged(this.id);\n      this.getCover(this.id);\n    }\n\n    getMerged(id) {\n      this.crudService.GetTrip(id).pipe(takeUntil(this.destroy$)).subscribe((tripData = []) => {\n        this.Post = tripData;\n        this.imageService.GetAlbum(id).pipe(takeUntil(this.destroy$)).subscribe((imageData = []) => {\n          var t = [tripData];\n          this.imageData = imageData;\n          this.myFavorites(this.user_id, this.imageData);\n          this.imageData.forEach(element => {\n            const mergedObj = Object.assign(Object.assign({}, t), element); //console.log(mergedObj);\n\n            this.albumImage.push(mergedObj);\n          });\n          this.GetImageComments(id);\n        });\n      });\n    }\n\n    myFavorites(uid, imgs) {\n      this.userService.GetMyFavorites(uid).pipe(takeUntil(this.destroy$)).subscribe(res => {\n        // console.log(res)      \n        var my_favs = res.favorites;\n        const haveIds = new Set(my_favs.map(({\n          _id\n        }) => _id));\n        var result = imgs.map(({\n          _id\n        }) => ({\n          _id,\n          favorite: haveIds.has(_id)\n        }));\n        this.Favorites = result;\n      });\n    }\n\n    makeFavorite(id) {\n      this.userService.AddFavorite(this.user_id, id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n        var my_favs = response.favorites;\n        const haveIds = new Set(my_favs.map(({\n          _id\n        }) => _id));\n        var y = this.Favorites.map(({\n          _id\n        }) => ({\n          _id,\n          favorite: haveIds.has(_id)\n        }));\n        this.Favorites = y;\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    removeFavorite(img_id) {\n      if (window.confirm('Remove this image from your favorites?')) {\n        this.userService.deleteFavorite(this.user_id, img_id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n          //  console.log(response);     \n          var my_favs = response.favorites;\n          const haveIds = new Set(my_favs.map(({\n            _id\n          }) => _id));\n          var y = this.Favorites.map(({\n            _id\n          }) => ({\n            _id,\n            favorite: haveIds.has(_id)\n          }));\n          this.Favorites = y;\n        });\n      }\n\n      ;\n    }\n\n    getCover(id) {\n      this.imageService.GetCover(id).pipe(takeUntil(this.destroy$)).subscribe(coverImage => {\n        var ci = coverImage;\n        var uri = this.serverURI + '/images/file/';\n        var CIuri = ci[0].filename;\n        this.Cover = uri + CIuri;\n      });\n    }\n\n    openModal(filename) {\n      this.imageService.OpenImage(filename).pipe(takeUntil(this.destroy$)).subscribe(img => {\n        this.dialog.open(ImageModalComponent, {\n          height: '100%',\n          width: 'auto',\n          data: {\n            imageData: img\n          }\n        });\n      });\n    }\n\n    GetImageComments(album_id) {\n      this.imageService.GetAlbumComments(album_id).pipe(takeUntil(this.destroy$)).subscribe(com => {\n        if (com) {\n          this.Comments = com;\n        }\n      });\n    }\n\n    addComment(id, album_id) {\n      //console.log(album_id);\n      this.submitted = true; // stop here if form is invalid\n\n      if (this.commentForm.invalid) {\n        return;\n      } else {\n        this.commentForm.get('user').setValue(localStorage.getItem('uid')); // console.log(this.commentForm.value);\n\n        this.imageService.AddComment(id, this.commentForm.value);\n        this.commentForm.reset();\n        Object.keys(this.commentForm.controls).forEach(key => {\n          this.commentForm.controls[key].setErrors(null);\n        });\n        this.GetImageComments(album_id);\n      }\n    }\n\n    deleteComment(img_id, c_id, alb_id) {\n      if (window.confirm('Delete your comment?')) {\n        this.imageService.deleteComment(img_id, c_id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n          // console.log(response);         \n          this.GetImageComments(alb_id);\n        });\n      }\n\n      ;\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next(true); // Unsubscribe from the subject\n\n      this.destroy$.unsubscribe();\n    }\n\n  }\n\n  AlbumViewComponent.ɵfac = function AlbumViewComponent_Factory(t) {\n    return new (t || AlbumViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ImagesService), i0.ɵɵdirectiveInject(i3.CrudService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.FormBuilder));\n  };\n\n  AlbumViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlbumViewComponent,\n    selectors: [[\"app-album-view\"]],\n    decls: 14,\n    vars: 7,\n    consts: [[1, \"pageView\"], [1, \"wrapper\"], [1, \"hero\", 3, \"ngStyle\"], [1, \"boxborder\"], [1, \"container\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"cols\", \"4\", \"rowHeight\", \"1:1\", \"gutterSize\", \"15\"], [\"class\", \"tile\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-3\", \"col-md-6\", \"col-xs-12\"], [1, \"example-card\"], [\"mat-card-avatar\", \"\", 1, \"example-header-image\"], [\"mat-card-image\", \"\", \"src\", \"https://material.angular.io/assets/img/examples/shiba2.jpg\", \"alt\", \"Photo of a Shiba Inu\"], [\"mat-button\", \"\"], [1, \"tile\"], [1, \"favIcons\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseTemplate\", \"\"], [\"mat-card-image\", \"\", 3, \"src\", \"alt\", \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function AlbumViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"main\", 1);\n        i0.ɵɵelementStart(2, \"section\", 2);\n        i0.ɵɵelementStart(3, \"h1\", 3);\n        i0.ɵɵelement(4, \"small\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementStart(6, \"small\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtemplate(9, AlbumViewComponent_div_9_Template, 18, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"app-navbar\");\n        i0.ɵɵelementStart(11, \"mat-grid-list\", 6);\n        i0.ɵɵtemplate(12, AlbumViewComponent_mat_grid_tile_12_Template, 27, 11, \"mat-grid-tile\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"app-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, \"url(\" + ctx.Cover + \")\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.Post.album_title, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.Post.album_desc);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.albumImage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.albumImage);\n      }\n    },\n    directives: [i7.NgStyle, i7.NgForOf, i8.NavbarComponent, i9.MatGridList, i10.FooterComponent, i11.MatCard, i11.MatCardHeader, i11.MatCardAvatar, i11.MatCardTitle, i11.MatCardSubtitle, i11.MatCardImage, i11.MatCardContent, i11.MatCardActions, i12.MatButton, i9.MatGridTile, i7.NgIf, i11.MatCardFooter, i13.MatIcon],\n    pipes: [i14.ɵa],\n    styles: [\".pageView[_ngcontent-%COMP%]{background-color:#f7f7f7}.hero[_ngcontent-%COMP%]{background:center;background-size:cover;padding:4rem 2rem;height:450px;margin-bottom:20px;box-shadow:3px 3px 5px 6px #00000040}.hero[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{color:#fff}.boxborder[_ngcontent-%COMP%]{position:relative;font-size:3rem;top:35%;left:50%;transform:translate(-50%,-50%);z-index:99;text-align:center;font-family:\\\"Amaranth\\\";font-weight:300;text-transform:uppercase;background-color:#0000008c;box-shadow:0 1em 2em -1em #ffffff80;padding:1em 2em;line-height:1.5}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{display:block;text-transform:lowercase;font-size:.7em}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]:first-child{border-bottom:1px solid rgba(255,255,255,.25);padding-bottom:.5em}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]:last-child{border-top:1px solid rgba(255,255,255,.25);padding-top:.5em;font-family:\\\"Handlee\\\"}mat-grid-tile[_ngcontent-%COMP%]{height:auto}mat-card[_ngcontent-%COMP%]{box-shadow:3px 3px 5px 6px #00000040!important}.example-card[_ngcontent-%COMP%]{max-width:400px}.example-header-image[_ngcontent-%COMP%]{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover}\"]\n  });\n  return AlbumViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}