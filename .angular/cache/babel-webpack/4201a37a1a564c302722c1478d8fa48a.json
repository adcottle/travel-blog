{"ast":null,"code":"import { GlobalConstants } from 'src/app/service/global.variables';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Validators } from \"@angular/forms\";\nimport { ImageModalComponent } from './image-modal/image-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/images/images.service\";\nimport * as i3 from \"../../service/crud/crud.service\";\nimport * as i4 from \"../../service/user/user.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../nav/navbar.component\";\nimport * as i9 from \"../../nav/footer/footer.component\";\nimport * as i10 from \"angular-gridster2\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/icon\";\nimport * as i15 from \"@angular/material/button\";\nimport * as i16 from \"safe-pipe\";\n\nfunction AlbumViewComponent_div_0_gridster_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"gridster-item\", 10);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"img\", 12);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_div_0_gridster_item_2_Template_img_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const a_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.openModal(a_r2.filename);\n    });\n    i0.ɵɵpipe(3, \"safe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const a_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"item\", item_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", a_r2.metadata.caption);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind2(3, 4, ctx_r4.serverURI + \"/images/file/\" + a_r2.filename, \"url\"), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(a_r2.metadata.caption);\n  }\n}\n\nfunction AlbumViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"gridster\", 8);\n    i0.ɵɵtemplate(2, AlbumViewComponent_div_0_gridster_item_2_Template, 6, 7, \"gridster-item\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r0.options);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.dashboard);\n  }\n}\n\nfunction AlbumViewComponent_ng_container_11_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_ng_container_11_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const a_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.removeFavorite(a_r10._id);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"favorite\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_ng_container_11_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_ng_container_11_ng_template_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const a_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.makeFavorite(a_r10._id);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"favorite_border\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_ng_container_11_li_35_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_ng_container_11_li_35_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const c_r22 = i0.ɵɵnextContext().$implicit;\n      const a_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.deleteComment(a_r10._id, c_r22.cid, a_r10.metadata.album_id);\n    });\n    i0.ɵɵelement(1, \"i\", 35);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_ng_container_11_li_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 31);\n    i0.ɵɵelementStart(1, \"span\", 32);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 33);\n    i0.ɵɵtemplate(5, AlbumViewComponent_ng_container_11_li_35_button_5_Template, 2, 0, \"button\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r22 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", c_r22.firstName, \" \", c_r22.lastName, \" : \\u00A0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", c_r22.comment, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.user_id === c_r22.uid);\n  }\n}\n\nfunction AlbumViewComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵelementStart(2, \"mat-card\", 14);\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵelementStart(4, \"div\", 16);\n    i0.ɵɵtemplate(5, AlbumViewComponent_ng_container_11_div_5_Template, 4, 0, \"div\", 17);\n    i0.ɵɵtemplate(6, AlbumViewComponent_ng_container_11_ng_template_6_Template, 4, 0, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"img\", 12);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_ng_container_11_Template_img_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const a_r10 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.openModal(a_r10.filename);\n    });\n    i0.ɵɵpipe(9, \"safe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-card-title\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementStart(12, \"p\", 19);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-card-content\");\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"p\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\");\n    i0.ɵɵelementStart(20, \"strong\");\n    i0.ɵɵtext(21, \"Tags:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"mat-card-actions\");\n    i0.ɵɵelementStart(24, \"form\", 20);\n    i0.ɵɵlistener(\"ngSubmit\", function AlbumViewComponent_ng_container_11_Template_form_ngSubmit_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const a_r10 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.addComment(a_r10._id, a_r10.metadata.album_id);\n    });\n    i0.ɵɵelementStart(25, \"div\", 21);\n    i0.ɵɵelementStart(26, \"div\", 22);\n    i0.ɵɵelementStart(27, \"mat-form-field\", 23);\n    i0.ɵɵelement(28, \"input\", 24);\n    i0.ɵɵelementStart(29, \"button\", 25);\n    i0.ɵɵelementStart(30, \"mat-icon\", 26);\n    i0.ɵɵtext(31, \"add_comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 27);\n    i0.ɵɵelementStart(33, \"div\", 27);\n    i0.ɵɵelementStart(34, \"ul\", 28);\n    i0.ɵɵtemplate(35, AlbumViewComponent_ng_container_11_li_35_Template, 6, 4, \"li\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const a_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n\n    const _r13 = i0.ɵɵreference(7);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Favorites[i_r11] == null ? null : ctx_r1.Favorites[i_r11].favorite)(\"ngIfElse\", _r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"alt\", a_r10.metadata.caption);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind2(9, 11, ctx_r1.serverURI + \"/images/file/\" + a_r10.filename, \"url\"), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(a_r10.metadata.caption);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(14, 14, a_r10.trip_date, \"MMMM/dd/yyyy\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", a_r10.metadata.city, \", \", a_r10.metadata.state, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(a_r10.tags);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.commentForm);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.Comments[i_r11] == null ? null : ctx_r1.Comments[i_r11].comments);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"background-image\": a0\n  };\n};\n\nexport let AlbumViewComponent = /*#__PURE__*/(() => {\n  class AlbumViewComponent {\n    constructor(actRoute, imageService, crudService, userService, dialog, fb) {\n      this.actRoute = actRoute;\n      this.imageService = imageService;\n      this.crudService = crudService;\n      this.userService = userService;\n      this.dialog = dialog;\n      this.fb = fb;\n      this.user_id = [];\n      this.albumImage = [];\n      this.imageData = [];\n      this.Post = [];\n      this.submitted = false;\n      this.Favorites = [];\n      this.Comments = [];\n      this.destroy$ = new Subject();\n      this.user_id = localStorage.getItem('uid');\n      this.baseURI = GlobalConstants.baseURI;\n      this.serverURI = GlobalConstants.serverURI;\n      this.id = this.actRoute.snapshot.paramMap.get('id');\n      this.commentForm = this.fb.group({\n        comment: ['', [Validators.required]],\n        user: []\n      });\n      this.options = {\n        draggable: {\n          enabled: false\n        },\n        swap: false,\n        pushItems: true,\n        resizable: {\n          enabled: false\n        },\n        minCols: 1,\n        maxCols: 4,\n        minRows: 1,\n        maxRows: 100,\n        maxItemCols: 4,\n        minItemCols: 1,\n        maxItemRows: 100,\n        minItemRows: 1,\n        maxItemArea: 250,\n        minItemArea: 1,\n        defaultItemCols: 1,\n        defaultItemRows: 1\n      };\n      this.dashboard = [{\n        cols: 1,\n        rows: 1,\n        y: 0,\n        x: 0,\n        minItemCols: 1,\n        maxItemCols: 4,\n        maxItemRows: 100,\n        minItemRows: 1,\n        minItemArea: 1,\n        maxItemArea: 250,\n        dragEnabled: false,\n        resizeEnabled: false,\n        compactEnabled: true\n      }, {\n        cols: 1,\n        rows: 1,\n        y: 0,\n        x: 0\n      }, {\n        cols: 1,\n        rows: 1,\n        y: 0,\n        x: 0\n      }, {\n        cols: 1,\n        rows: 1,\n        y: 0,\n        x: 0\n      }, {\n        cols: 1,\n        rows: 1,\n        y: 0,\n        x: 0\n      } // {cols: 2, rows: 2, y: 0, x: 2},\n      // {cols: 1, rows: 1, y: 0, x: 4},\n      // {cols: 1, rows: 1, y: 2, x: 5},\n      // {cols: 1, rows: 1, y: 1, x: 0},\n      // {cols: 1, rows: 1, y: 1, x: 0},\n      // {cols: 2, rows: 2, y: 3, x: 5},\n      // {cols: 2, rows: 2, y: 2, x: 0},\n      // {cols: 2, rows: 1, y: 2, x: 2},\n      // {cols: 1, rows: 1, y: 2, x: 4},\n      // {cols: 1, rows: 1, y: 2, x: 6}\n      ];\n    }\n\n    get f() {\n      return this.commentForm.controls;\n    }\n\n    ngOnInit() {\n      this.getMerged(this.id);\n      this.getCover(this.id);\n    }\n\n    getMerged(id) {\n      this.crudService.GetTrip(id).pipe(takeUntil(this.destroy$)).subscribe((tripData = []) => {\n        this.Post = tripData;\n        this.imageService.GetAlbum(id).pipe(takeUntil(this.destroy$)).subscribe((imageData = []) => {\n          var t = [tripData];\n          this.imageData = imageData;\n          this.myFavorites(this.user_id, this.imageData);\n          this.imageData.forEach(element => {\n            const mergedObj = Object.assign(Object.assign({}, t), element); //console.log(mergedObj);\n\n            this.albumImage.push(mergedObj);\n          });\n          this.GetImageComments(id);\n        });\n      });\n    }\n\n    changedOptions() {\n      this.options.api.optionsChanged();\n    }\n\n    removeItem(item) {\n      this.dashboard.splice(this.dashboard.indexOf(item), 1);\n    }\n\n    addItem() {\n      const item = {\n        cols: 2,\n        rows: 2,\n        y: 0,\n        x: 2\n      };\n      this.dashboard.push(item);\n    }\n\n    myFavorites(uid, imgs) {\n      this.userService.GetMyFavorites(uid).pipe(takeUntil(this.destroy$)).subscribe(res => {\n        // console.log(res)      \n        var my_favs = res.favorites;\n        const haveIds = new Set(my_favs.map(({\n          _id\n        }) => _id));\n        var result = imgs.map(({\n          _id\n        }) => ({\n          _id,\n          favorite: haveIds.has(_id)\n        }));\n        this.Favorites = result;\n      });\n    }\n\n    makeFavorite(id) {\n      this.userService.AddFavorite(this.user_id, id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n        var my_favs = response.favorites;\n        const haveIds = new Set(my_favs.map(({\n          _id\n        }) => _id));\n        var y = this.Favorites.map(({\n          _id\n        }) => ({\n          _id,\n          favorite: haveIds.has(_id)\n        }));\n        this.Favorites = y;\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    removeFavorite(img_id) {\n      if (window.confirm('Remove this image from your favorites?')) {\n        this.userService.deleteFavorite(this.user_id, img_id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n          //  console.log(response);     \n          var my_favs = response.favorites;\n          const haveIds = new Set(my_favs.map(({\n            _id\n          }) => _id));\n          var y = this.Favorites.map(({\n            _id\n          }) => ({\n            _id,\n            favorite: haveIds.has(_id)\n          }));\n          this.Favorites = y;\n        });\n      }\n\n      ;\n    }\n\n    getCover(id) {\n      this.imageService.GetCover(id).pipe(takeUntil(this.destroy$)).subscribe(coverImage => {\n        var ci = coverImage;\n        var uri = this.serverURI + '/images/file/';\n        var CIuri = ci[0].filename;\n        this.Cover = uri + CIuri;\n      });\n    }\n\n    openModal(filename) {\n      this.imageService.OpenImage(filename).pipe(takeUntil(this.destroy$)).subscribe(img => {\n        this.dialog.open(ImageModalComponent, {\n          height: '100%',\n          width: 'auto',\n          data: {\n            imageData: img\n          }\n        });\n      });\n    }\n\n    GetImageComments(album_id) {\n      this.imageService.GetAlbumComments(album_id).pipe(takeUntil(this.destroy$)).subscribe(com => {\n        if (com) {\n          this.Comments = com;\n        }\n      });\n    }\n\n    addComment(id, album_id) {\n      //console.log(album_id);\n      this.submitted = true; // stop here if form is invalid\n\n      if (this.commentForm.invalid) {\n        return;\n      } else {\n        this.commentForm.get('user').setValue(localStorage.getItem('uid')); // console.log(this.commentForm.value);\n\n        this.imageService.AddComment(id, this.commentForm.value);\n        this.commentForm.reset();\n        Object.keys(this.commentForm.controls).forEach(key => {\n          this.commentForm.controls[key].setErrors(null);\n        });\n        this.GetImageComments(album_id);\n      }\n    }\n\n    deleteComment(img_id, c_id, alb_id) {\n      if (window.confirm('Delete your comment?')) {\n        this.imageService.deleteComment(img_id, c_id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n          // console.log(response);         \n          this.GetImageComments(alb_id);\n        });\n      }\n\n      ;\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next(true); // Unsubscribe from the subject\n\n      this.destroy$.unsubscribe();\n    }\n\n  }\n\n  AlbumViewComponent.ɵfac = function AlbumViewComponent_Factory(t) {\n    return new (t || AlbumViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ImagesService), i0.ɵɵdirectiveInject(i3.CrudService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.FormBuilder));\n  };\n\n  AlbumViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlbumViewComponent,\n    selectors: [[\"app-album-view\"]],\n    decls: 13,\n    vars: 7,\n    consts: [[\"style\", \"width: 80%; height: 80%;\", 4, \"ngFor\", \"ngForOf\"], [1, \"pageView\"], [1, \"wrapper\"], [1, \"hero\", 3, \"ngStyle\"], [1, \"boxborder\"], [1, \"row\"], [4, \"ngFor\", \"ngForOf\"], [2, \"width\", \"80%\", \"height\", \"80%\"], [3, \"options\"], [3, \"item\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\"], [1, \"gridster-item-content\"], [\"mat-card-image\", \"\", 3, \"src\", \"alt\", \"click\"], [1, \"col-12\", \"col-md-4\"], [1, \"mb-3\"], [1, \"cardImg\"], [1, \"favIcons\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseTemplate\", \"\"], [1, \"trip-date\", \"float-right\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"my-3\"], [1, \"commentForm\", \"col-12\"], [\"appearance\", \"standard\"], [\"matInput\", \"\", \"placeholder\", \"comment\", \"formControlName\", \"comment\"], [\"matSuffix\", \"\", \"type\", \"submit\"], [\"matSuffix\", \"\", 1, \"comIcon\"], [1, \"comments\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"list-group-item\"], [2, \"float\", \"left\", \"color\", \"blue\"], [2, \"float\", \"right\", \"color\", \"red\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"far\", \"fa-trash-alt\"]],\n    template: function AlbumViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AlbumViewComponent_div_0_Template, 3, 2, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"main\", 2);\n        i0.ɵɵelementStart(3, \"section\", 3);\n        i0.ɵɵelementStart(4, \"h1\", 4);\n        i0.ɵɵelement(5, \"small\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementStart(7, \"small\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"app-navbar\");\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵtemplate(11, AlbumViewComponent_ng_container_11_Template, 36, 17, \"ng-container\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"app-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.albumImage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, \"url(\" + ctx.Cover + \")\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.Post.album_title, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.Post.album_desc);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.albumImage);\n      }\n    },\n    directives: [i7.NgForOf, i7.NgStyle, i8.NavbarComponent, i9.FooterComponent, i10.GridsterComponent, i10.GridsterItemComponent, i11.MatCardImage, i11.MatCard, i7.NgIf, i11.MatCardTitle, i11.MatCardContent, i11.MatCardActions, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i12.MatFormField, i13.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i12.MatSuffix, i14.MatIcon, i15.MatButton],\n    pipes: [i16.ɵa, i7.DatePipe],\n    styles: [\".pageView[_ngcontent-%COMP%]{background-color:#f7f7f7}.hero[_ngcontent-%COMP%]{background:center;background-size:cover;padding:4rem 2rem;height:450px;margin-bottom:20px;box-shadow:3px 3px 5px 6px #00000040}.hero[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{color:#fff}.boxborder[_ngcontent-%COMP%]{position:relative;font-size:3rem;top:35%;left:50%;transform:translate(-50%,-50%);z-index:99;text-align:center;font-family:\\\"Amaranth\\\";font-weight:300;text-transform:uppercase;background-color:#0000008c;box-shadow:0 1em 2em -1em #ffffff80;padding:1em 2em;line-height:1.5}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{display:block;text-transform:lowercase;font-size:.7em}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]:first-child{border-bottom:1px solid rgba(255,255,255,.25);padding-bottom:.5em}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]:last-child{border-top:1px solid rgba(255,255,255,.25);padding-top:.5em;font-family:\\\"Handlee\\\"}mat-card[_ngcontent-%COMP%] > img[_ngcontent-%COMP%]{min-height:400px;max-height:400px;min-width:100%;cursor:pointer}mat-card[_ngcontent-%COMP%]{box-shadow:3px 3px 5px 6px #00000040!important}mat-card-title[_ngcontent-%COMP%]{color:#3cb371;font-family:\\\"Thasadith\\\";font-weight:bold;font-size:20px}mat-card-content[_ngcontent-%COMP%]{font-family:\\\"Delius\\\";font-size:16px}.mat-form-field[_ngcontent-%COMP%]{width:100%}.comIcon[_ngcontent-%COMP%]{color:#3cb371}button[_ngcontent-%COMP%]{background-color:transparent!important;border:transparent!important}mat-icon[_ngcontent-%COMP%]{background-color:transparent!important;border:transparent!important}.cardImg[_ngcontent-%COMP%]{position:relative}.cardImg[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{display:block;margin-top:-15px;min-height:400px;max-height:400px;min-width:100%;cursor:pointer}.favIcons[_ngcontent-%COMP%]{position:absolute;top:0;right:-15px;color:red}.comments[_ngcontent-%COMP%]{font-family:\\\"Delius\\\";min-height:200px;max-height:200px;overflow-y:auto}.comments[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{border-top:none;border-left:none;border-right:none;border-bottom-color:#bfdaf4}\"]\n  });\n  return AlbumViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}