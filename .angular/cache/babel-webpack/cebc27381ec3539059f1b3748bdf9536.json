{"ast":null,"code":"\"use strict\";\n\nvar ɵngcc0 = require('@angular/core');\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StickyNavDirective = void 0;\n\nvar core_1 = require(\"@angular/core\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar StickyNavDirective =\n/** @class */\nfunction () {\n  function StickyNavDirective(elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.lastScroll = 0;\n    this.isSticky = false;\n    this.stickyEnabled = true;\n  }\n\n  StickyNavDirective.prototype.ngOnInit = function () {\n    var _this = this;\n\n    this.scrollSubscription = rxjs_1.fromEvent(window, 'scroll').subscribe(function () {\n      return _this.manageScrollEvent();\n    });\n  };\n\n  StickyNavDirective.prototype.manageScrollEvent = function () {\n    var scroll = window.pageYOffset;\n\n    if (this.stickyEnabled && scroll > this.lastScroll && !this.isSticky && scroll >= this.elementRef.nativeElement.offsetTop) {\n      this.setSticky();\n    } else if (scroll < this.lastScroll && this.isSticky && scroll <= this.originalPosition) {\n      this.unsetSticky();\n    }\n\n    this.lastScroll = scroll;\n  };\n\n  StickyNavDirective.prototype.setSticky = function () {\n    this.isSticky = true;\n    this.originalPosition = this.elementRef.nativeElement.offsetTop;\n    this.wrapper = this.elementRef.nativeElement.cloneNode(true);\n    this.removeIds();\n    this.setStyle('position', 'fixed');\n    this.setStyle('top', '0');\n    this.addClass();\n    this.renderer.setStyle(this.wrapper, 'visibility', 'hidden');\n    this.elementRef.nativeElement.parentElement.insertBefore(this.wrapper, this.elementRef.nativeElement);\n  };\n\n  StickyNavDirective.prototype.removeIds = function () {\n    var _this = this;\n\n    var _a = this.wrapper.getBoundingClientRect(),\n        initHeight = _a.height,\n        initWidth = _a.width;\n\n    Array.from(this.wrapper.querySelectorAll('*')).forEach(function (el) {\n      return _this.renderer.removeAttribute(el, 'id');\n    });\n\n    var _b = this.wrapper.getBoundingClientRect(),\n        postHeight = _b.height,\n        postWidth = _b.width;\n\n    if (initWidth !== postWidth || initHeight !== postHeight) {\n      throw new Error(\"Size mismatch between sticky element and clone - please ensure you aren't using IDs for styling.\");\n    }\n  };\n\n  StickyNavDirective.prototype.unsetSticky = function () {\n    this.isSticky = false;\n    this.originalPosition = 0;\n    this.elementRef.nativeElement.parentElement.removeChild(this.wrapper);\n    this.setStyle('position', 'static');\n    this.removeClass();\n  };\n\n  StickyNavDirective.prototype.setStyle = function (key, value) {\n    this.renderer.setStyle(this.elementRef.nativeElement, key, value);\n  };\n\n  StickyNavDirective.prototype.addClass = function () {\n    this.renderer.addClass(this.elementRef.nativeElement, this.stickyClass);\n  };\n\n  StickyNavDirective.prototype.removeClass = function () {\n    this.renderer.removeClass(this.elementRef.nativeElement, this.stickyClass);\n  };\n\n  StickyNavDirective.prototype.ngOnDestroy = function () {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n    }\n  };\n\n  __decorate([core_1.Input('stickyClass'), __metadata(\"design:type\", String)], StickyNavDirective.prototype, \"stickyClass\", void 0);\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], StickyNavDirective.prototype, \"stickyEnabled\", void 0);\n\n  StickyNavDirective = __decorate([__metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.Renderer2])], StickyNavDirective);\n\n  StickyNavDirective.ɵfac = function StickyNavDirective_Factory(t) {\n    return new (t || StickyNavDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  StickyNavDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: StickyNavDirective,\n    selectors: [[\"\", \"ngStickyNav\", \"\"]],\n    inputs: {\n      stickyEnabled: \"stickyEnabled\",\n      stickyClass: \"stickyClass\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return StickyNavDirective;\n}();\n\nexports.StickyNavDirective = StickyNavDirective; //# sourceMappingURL=sticky-nav.directive.js.map","map":null,"metadata":{},"sourceType":"script"}