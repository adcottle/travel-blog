{"ast":null,"code":"import { GlobalConstants } from 'src/app/service/global.variables';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Validators } from \"@angular/forms\";\nimport { ImageModalComponent } from './image-modal/image-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/images/images.service\";\nimport * as i3 from \"../../service/crud/crud.service\";\nimport * as i4 from \"../../service/user/user.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../nav/navbar.component\";\nimport * as i9 from \"@angular/material/grid-list\";\nimport * as i10 from \"../../nav/footer/footer.component\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"safe-pipe\";\n\nfunction AlbumViewComponent_mat_grid_tile_10_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_mat_grid_tile_10_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const a_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.removeFavorite(a_r1._id);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"favorite\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_mat_grid_tile_10_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_mat_grid_tile_10_ng_template_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const a_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.makeFavorite(a_r1._id);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"favorite_border\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_mat_grid_tile_10_li_25_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_mat_grid_tile_10_li_25_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const c_r13 = i0.ɵɵnextContext().$implicit;\n      const a_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.deleteComment(a_r1._id, c_r13.cid, a_r1.metadata.album_id);\n    });\n    i0.ɵɵelement(1, \"i\", 26);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AlbumViewComponent_mat_grid_tile_10_li_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 22);\n    i0.ɵɵelementStart(1, \"span\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 24);\n    i0.ɵɵtemplate(5, AlbumViewComponent_mat_grid_tile_10_li_25_button_5_Template, 2, 0, \"button\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r13 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", c_r13.firstName, \" \", c_r13.lastName, \" : \\u00A0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", c_r13.comment, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.user_id === c_r13.uid);\n  }\n}\n\nfunction AlbumViewComponent_mat_grid_tile_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵtemplate(3, AlbumViewComponent_mat_grid_tile_10_div_3_Template, 4, 0, \"div\", 9);\n    i0.ɵɵtemplate(4, AlbumViewComponent_mat_grid_tile_10_ng_template_4_Template, 4, 0, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 11);\n    i0.ɵɵelementStart(7, \"img\", 12);\n    i0.ɵɵlistener(\"click\", function AlbumViewComponent_mat_grid_tile_10_Template_img_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const a_r1 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.openModal(a_r1.filename);\n    });\n    i0.ɵɵpipe(8, \"safe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 13);\n    i0.ɵɵelementStart(10, \"p\", 14);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementStart(12, \"span\", 15);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\", 16);\n    i0.ɵɵtext(15);\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelement(17, \"br\");\n    i0.ɵɵelementStart(18, \"span\");\n    i0.ɵɵelementStart(19, \"strong\");\n    i0.ɵɵtext(20, \"Tags:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 17);\n    i0.ɵɵelementStart(23, \"div\", 18);\n    i0.ɵɵelementStart(24, \"ul\", 19);\n    i0.ɵɵtemplate(25, AlbumViewComponent_mat_grid_tile_10_li_25_Template, 6, 4, \"li\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const a_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n\n    const _r4 = i0.ɵɵreference(5);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Favorites[i_r2] == null ? null : ctx_r0.Favorites[i_r2].favorite)(\"ngIfElse\", _r4);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"alt\", a_r1.metadata.caption);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind2(8, 10, ctx_r0.serverURI + \"/images/file/\" + a_r1.filename, \"url\"), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(a_r1.metadata.caption);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(a_r1.metadata.photo_date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", a_r1.metadata.city, \", \", a_r1.metadata.state, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(a_r1.tags);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.Comments[i_r2] == null ? null : ctx_r0.Comments[i_r2].comments);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"background-image\": a0\n  };\n};\n\nexport let AlbumViewComponent = /*#__PURE__*/(() => {\n  class AlbumViewComponent {\n    constructor(actRoute, imageService, crudService, userService, dialog, fb) {\n      this.actRoute = actRoute;\n      this.imageService = imageService;\n      this.crudService = crudService;\n      this.userService = userService;\n      this.dialog = dialog;\n      this.fb = fb;\n      this.user_id = [];\n      this.albumImage = [];\n      this.imageData = [];\n      this.Post = [];\n      this.submitted = false;\n      this.Favorites = [];\n      this.Comments = [];\n      this.destroy$ = new Subject();\n      this.user_id = localStorage.getItem('uid');\n      this.baseURI = GlobalConstants.baseURI;\n      this.serverURI = GlobalConstants.serverURI;\n      this.id = this.actRoute.snapshot.paramMap.get('id');\n      this.commentForm = this.fb.group({\n        comment: ['', [Validators.required]],\n        user: []\n      });\n    }\n\n    get f() {\n      return this.commentForm.controls;\n    }\n\n    ngOnInit() {\n      this.getMerged(this.id);\n      this.getCover(this.id);\n    }\n\n    getMerged(id) {\n      this.crudService.GetTrip(id).pipe(takeUntil(this.destroy$)).subscribe((tripData = []) => {\n        this.Post = tripData;\n        this.imageService.GetAlbum(id).pipe(takeUntil(this.destroy$)).subscribe((imageData = []) => {\n          var t = [tripData];\n          this.imageData = imageData;\n          this.myFavorites(this.user_id, this.imageData);\n          this.imageData.forEach(element => {\n            const mergedObj = Object.assign(Object.assign({}, t), element); //console.log(mergedObj);\n\n            this.albumImage.push(mergedObj);\n            console.log(this.albumImage);\n          });\n          this.GetImageComments(id);\n        });\n      });\n    }\n\n    myFavorites(uid, imgs) {\n      this.userService.GetMyFavorites(uid).pipe(takeUntil(this.destroy$)).subscribe(res => {\n        // console.log(res)      \n        var my_favs = res.favorites;\n        const haveIds = new Set(my_favs.map(({\n          _id\n        }) => _id));\n        var result = imgs.map(({\n          _id\n        }) => ({\n          _id,\n          favorite: haveIds.has(_id)\n        }));\n        this.Favorites = result;\n      });\n    }\n\n    makeFavorite(id) {\n      this.userService.AddFavorite(this.user_id, id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n        var my_favs = response.favorites;\n        const haveIds = new Set(my_favs.map(({\n          _id\n        }) => _id));\n        var y = this.Favorites.map(({\n          _id\n        }) => ({\n          _id,\n          favorite: haveIds.has(_id)\n        }));\n        this.Favorites = y;\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    removeFavorite(img_id) {\n      if (window.confirm('Remove this image from your favorites?')) {\n        this.userService.deleteFavorite(this.user_id, img_id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n          //  console.log(response);     \n          var my_favs = response.favorites;\n          const haveIds = new Set(my_favs.map(({\n            _id\n          }) => _id));\n          var y = this.Favorites.map(({\n            _id\n          }) => ({\n            _id,\n            favorite: haveIds.has(_id)\n          }));\n          this.Favorites = y;\n        });\n      }\n\n      ;\n    }\n\n    getCover(id) {\n      this.imageService.GetCover(id).pipe(takeUntil(this.destroy$)).subscribe(coverImage => {\n        var ci = coverImage;\n        var uri = this.serverURI + '/images/file/';\n        var CIuri = ci[0].filename;\n        this.Cover = uri + CIuri;\n      });\n    }\n\n    openModal(filename) {\n      this.imageService.OpenImage(filename).pipe(takeUntil(this.destroy$)).subscribe(img => {\n        this.dialog.open(ImageModalComponent, {\n          height: '100%',\n          width: 'auto',\n          data: {\n            imageData: img\n          }\n        });\n      });\n    }\n\n    GetImageComments(album_id) {\n      this.imageService.GetAlbumComments(album_id).pipe(takeUntil(this.destroy$)).subscribe(com => {\n        if (com) {\n          this.Comments = com;\n        }\n      });\n    }\n\n    addComment(id, album_id) {\n      //console.log(album_id);\n      this.submitted = true; // stop here if form is invalid\n\n      if (this.commentForm.invalid) {\n        return;\n      } else {\n        this.commentForm.get('user').setValue(localStorage.getItem('uid')); // console.log(this.commentForm.value);\n\n        this.imageService.AddComment(id, this.commentForm.value);\n        this.commentForm.reset();\n        Object.keys(this.commentForm.controls).forEach(key => {\n          this.commentForm.controls[key].setErrors(null);\n        });\n        this.GetImageComments(album_id);\n      }\n    }\n\n    deleteComment(img_id, c_id, alb_id) {\n      if (window.confirm('Delete your comment?')) {\n        this.imageService.deleteComment(img_id, c_id).pipe(takeUntil(this.destroy$)).subscribe(response => {\n          // console.log(response);         \n          this.GetImageComments(alb_id);\n        });\n      }\n\n      ;\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next(true); // Unsubscribe from the subject\n\n      this.destroy$.unsubscribe();\n    }\n\n  }\n\n  AlbumViewComponent.ɵfac = function AlbumViewComponent_Factory(t) {\n    return new (t || AlbumViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ImagesService), i0.ɵɵdirectiveInject(i3.CrudService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.FormBuilder));\n  };\n\n  AlbumViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlbumViewComponent,\n    selectors: [[\"app-album-view\"]],\n    decls: 12,\n    vars: 6,\n    consts: [[1, \"pageView\"], [1, \"wrapper\"], [1, \"hero\", 3, \"ngStyle\"], [1, \"boxborder\"], [\"cols\", \"4\", \"rowHeight\", \"1:1\", \"gutterSize\", \"15\"], [\"class\", \"tile \", 4, \"ngFor\", \"ngForOf\"], [1, \"tile\"], [1, \"card\"], [1, \"favIcons\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseTemplate\", \"\"], [1, \"img-holder\"], [1, \"card-image\", 3, \"src\", \"alt\", \"click\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"float-right\"], [1, \"card-text\"], [1, \"card-footer\"], [1, \"comments\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"list-group-item\"], [2, \"float\", \"left\", \"color\", \"blue\"], [2, \"float\", \"right\", \"color\", \"red\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"far\", \"fa-trash-alt\"]],\n    template: function AlbumViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"main\", 1);\n        i0.ɵɵelementStart(2, \"section\", 2);\n        i0.ɵɵelementStart(3, \"h1\", 3);\n        i0.ɵɵelement(4, \"small\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementStart(6, \"small\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"app-navbar\");\n        i0.ɵɵelementStart(9, \"mat-grid-list\", 4);\n        i0.ɵɵtemplate(10, AlbumViewComponent_mat_grid_tile_10_Template, 26, 13, \"mat-grid-tile\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"app-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, \"url(\" + ctx.Cover + \")\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.Post.album_title, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.Post.album_desc);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.albumImage);\n      }\n    },\n    directives: [i7.NgStyle, i8.NavbarComponent, i9.MatGridList, i7.NgForOf, i10.FooterComponent, i9.MatGridTile, i7.NgIf, i11.MatButton, i12.MatIcon],\n    pipes: [i13.ɵa],\n    styles: [\".pageView[_ngcontent-%COMP%]{background-color:#f7f7f7}.hero[_ngcontent-%COMP%]{background:center;background-size:cover;padding:4rem 2rem;height:450px;margin-bottom:20px;box-shadow:3px 3px 5px 6px #00000040}.hero[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{color:#fff}.boxborder[_ngcontent-%COMP%]{position:relative;font-size:3rem;top:35%;left:50%;transform:translate(-50%,-50%);z-index:99;text-align:center;font-family:\\\"Amaranth\\\";font-weight:300;text-transform:uppercase;background-color:#0000008c;box-shadow:0 1em 2em -1em #ffffff80;padding:1em 2em;line-height:1.5}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{display:block;text-transform:lowercase;font-size:.7em}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]:first-child{border-bottom:1px solid rgba(255,255,255,.25);padding-bottom:.5em}.boxborder[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]:last-child{border-top:1px solid rgba(255,255,255,.25);padding-top:.5em;font-family:\\\"Handlee\\\"}.img-holder[_ngcontent-%COMP%]{width:100%;height:300px}.card-image[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:cover;cursor:pointer}.tile[_ngcontent-%COMP%]{box-shadow:3px 3px 5px 6px #00000040!important}mat-card-title[_ngcontent-%COMP%], .card-title[_ngcontent-%COMP%]{color:#3cb371;font-family:\\\"Thasadith\\\";font-weight:bold;font-size:20px}mat-card-content[_ngcontent-%COMP%], .card-body[_ngcontent-%COMP%]{font-family:\\\"Delius\\\";font-size:16px}.mat-form-field[_ngcontent-%COMP%]{width:100%}.comIcon[_ngcontent-%COMP%]{color:#3cb371}button[_ngcontent-%COMP%]{background-color:transparent!important;border:transparent!important}mat-icon[_ngcontent-%COMP%]{background-color:transparent!important;border:transparent!important}.favIcons[_ngcontent-%COMP%]{position:absolute;top:0;right:-15px;color:red}.comments[_ngcontent-%COMP%]{font-family:\\\"Delius\\\";min-height:200px;max-height:200px;overflow-y:auto}.comments[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{border-top:none;border-left:none;border-right:none;border-style:none}\"]\n  });\n  return AlbumViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}